package pt.ulisboa.tecnico.learnjava.sibs.sibs;

import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.doThrow;

import org.junit.After;
import org.junit.Test;

import pt.ulisboa.tecnico.learnjava.bank.domain.Bank;
import pt.ulisboa.tecnico.learnjava.bank.services.Services;
import pt.ulisboa.tecnico.learnjava.sibs.domain.Sibs;

public class RetryMockitoTest {
	
	@Test
	public void retry3TimesAndGoToErrorState()   {
		Services servicesMock = mock(Services.class);
        Sibs sibsMock = new Sibs(3, servicesMock);
		String sourceIban = "AAA";
		String targetIban = "BBB";
        
        when(servicesMock.accountExistance(sourceIban)).thenReturn(true);
        when(servicesMock.accountExistance(targetIban)).thenReturn(true);
        
        when(servicesMock.sameBanks(sourceIban, targetIban)).thenReturn(true);



        doThrow(AccountException.class).when(servicesMock).withdraw(SOURCE_IBAN, AMOUNT);
        
        this.sibs.transfer(SOURCE_IBAN, TARGET_IBAN, AMOUNT);
        
        this.sibs.processOperations();
        this.sibs.processOperations();
        this.sibs.processOperations();
        
        verify(servicesMock, times(3)).withdraw(SOURCE_IBAN, AMOUNT);
        verify(servicesMock, never()).deposit(TARGET_IBAN, AMOUNT);
		
	}
	
	@After
	public void tearDown() {
		Bank.clearBanks();
	}

}
