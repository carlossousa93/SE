//package pt.ulisboa.tecnico.learnjava.sibs.sibs;
//
//import static org.junit.Assert.assertEquals;
//import static org.junit.Assert.fail;
//
//import org.junit.After;
//import org.junit.Before;
//import org.junit.Test;
//
//import pt.ulisboa.tecnico.learnjava.bank.domain.Bank;
//import pt.ulisboa.tecnico.learnjava.bank.domain.Client;
//import pt.ulisboa.tecnico.learnjava.bank.exceptions.AccountException;
//import pt.ulisboa.tecnico.learnjava.bank.exceptions.BankException;
//import pt.ulisboa.tecnico.learnjava.bank.exceptions.ClientException;
//import pt.ulisboa.tecnico.learnjava.sibs.domain.Operation;
//import pt.ulisboa.tecnico.learnjava.sibs.domain.TransferOperation;
//import pt.ulisboa.tecnico.learnjava.sibs.exceptions.OperationException;
//
//public class TransferOperationStatesTest {
//	private static final String ADDRESS = "Ave.";
//	private static final String PHONE_NUMBER = "987654321";
//	private static final String NIF = "123456789";
//	private static final String LAST_NAME = "Silva";
//	private static final String FIRST_NAME = "Ant√≥nio";
//
//	private Bank sourceBank;
//	private Bank targetBank;
//	private Client sourceClient;
//	private Client targetClient;
//
//	@Before
//	public void setUp() throws BankException, ClientException {
//
//		this.sourceBank = new Bank("CGD");
//		this.targetBank = new Bank("BPI");
//		this.sourceClient = new Client(this.sourceBank, FIRST_NAME, LAST_NAME, NIF, PHONE_NUMBER, ADDRESS, 33);
//		this.targetClient = new Client(this.targetBank, FIRST_NAME, LAST_NAME, NIF, PHONE_NUMBER, ADDRESS, 22);
//	}
//
//	@Test
//	public void processStatesDifferentBanks()
//			throws BankException, AccountException, ClientException, OperationException {
//		String sourceIban = this.sourceBank.createAccount(Bank.AccountType.CHECKING, this.sourceClient, 1000, 0);
//		String targetIban = this.targetBank.createAccount(Bank.AccountType.CHECKING, this.targetClient, 1000, 0);
//
//		TransferOperation operation = new TransferOperation(sourceIban, targetIban, 100);
//
//		assertEquals(Operation.OPERATION_TRANSFER, operation.getType());
//		assertEquals("Registered", operation.getState());
//		operation.process();
//		assertEquals("Withdrawn", operation.getState());
//		operation.process();
//		assertEquals("Deposited", operation.getState());
//		operation.process();
//		assertEquals("Completed", operation.getState());
//	}
//
//	@Test
//	public void processStatesSameBank() throws ClientException, BankException, AccountException, OperationException {
//		Client targetClientSameBank = new Client(this.sourceBank, "Cristiano", "Ronaldo", "123456711", "962078576",
//				"Avenida de Turim", 35);
//
//		String sourceIban = this.sourceBank.createAccount(Bank.AccountType.CHECKING, this.sourceClient, 1000, 0);
//		String targetIban = this.sourceBank.createAccount(Bank.AccountType.CHECKING, targetClientSameBank, 1000, 0);
//
//		TransferOperation operation = new TransferOperation(sourceIban, targetIban, 100);
//
//		operation.process();
//		assertEquals("Withdrawn", operation.getState());
//		operation.process();
//		assertEquals("Completed", operation.getState());
//
//	}
//
//	@Test
//	public void processRegistredCancelled()
//			throws ClientException, BankException, AccountException, OperationException {
//		String sourceIban = this.sourceBank.createAccount(Bank.AccountType.CHECKING, this.sourceClient, 1000, 0);
//		String targetIban = this.targetBank.createAccount(Bank.AccountType.CHECKING, this.targetClient, 1000, 0);
//
//		TransferOperation operation = new TransferOperation(sourceIban, targetIban, 100);
//
//		assertEquals(Operation.OPERATION_TRANSFER, operation.getType());
//		assertEquals("Registered", operation.getState());
//		operation.cancel();
//		assertEquals("Cancelled", operation.getState());
//		try {
//			operation.process();
//			fail();
//		} catch (Exception e) {
//			assertEquals("Cancelled", operation.getState());
//		}
//	}
//
//	@Test
//	public void processWithdrawCancelled() throws ClientException, BankException, AccountException, OperationException {
//		String sourceIban = this.sourceBank.createAccount(Bank.AccountType.CHECKING, this.sourceClient, 1000, 0);
//		String targetIban = this.targetBank.createAccount(Bank.AccountType.CHECKING, this.targetClient, 1000, 0);
//
//		TransferOperation operation = new TransferOperation(sourceIban, targetIban, 100);
//
//		assertEquals(Operation.OPERATION_TRANSFER, operation.getType());
//		assertEquals("Registered", operation.getState());
//		operation.process();
//		assertEquals("Withdrawn", operation.getState());
//		operation.cancel();
//		assertEquals("Cancelled", operation.getState());
//		try {
//			operation.process();
//			fail();
//		} catch (Exception e) {
//			assertEquals("Cancelled", operation.getState());
//		}
//
//	}
//
//	@Test
//	public void processDepositedCancelled()
//			throws ClientException, BankException, AccountException, OperationException {
//		String sourceIban = this.sourceBank.createAccount(Bank.AccountType.CHECKING, this.sourceClient, 1000, 0);
//		String targetIban = this.targetBank.createAccount(Bank.AccountType.CHECKING, this.targetClient, 1000, 0);
//
//		TransferOperation operation = new TransferOperation(sourceIban, targetIban, 100);
//
//		assertEquals(Operation.OPERATION_TRANSFER, operation.getType());
//		assertEquals("Registered", operation.getState());
//		operation.process();
//		assertEquals("Withdrawn", operation.getState());
//		operation.process();
//		assertEquals("Deposited", operation.getState());
//		operation.cancel();
//		assertEquals("Cancelled", operation.getState());
//		try {
//			operation.process();
//			fail();
//		} catch (Exception e) {
//			assertEquals("Cancelled", operation.getState());
//		}
//	}
//
//	@Test
//	public void processCompletedCancelled()
//			throws ClientException, BankException, AccountException, OperationException {
//		String sourceIban = this.sourceBank.createAccount(Bank.AccountType.CHECKING, this.sourceClient, 1000, 0);
//		String targetIban = this.targetBank.createAccount(Bank.AccountType.CHECKING, this.targetClient, 1000, 0);
//
//		TransferOperation operation = new TransferOperation(sourceIban, targetIban, 100);
//
//		assertEquals(Operation.OPERATION_TRANSFER, operation.getType());
//		assertEquals("Registered", operation.getState());
//		operation.process();
//		assertEquals("Withdrawn", operation.getState());
//		operation.process();
//		assertEquals("Deposited", operation.getState());
//		operation.process();
//		assertEquals("Completed", operation.getState());
//		try {
//			operation.cancel();
//			fail();
//		} catch (Exception e) {
//			assertEquals("Completed", operation.getState());
//		}
//	}
//
//	@After
//	public void tearDown() {
//		Bank.clearBanks();
//	}
//
//}
