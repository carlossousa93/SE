package pt.ulisboa.tecnico.learnjava.sibs.sibs;

import org.junit.After;
import org.junit.Before;

import pt.ulisboa.tecnico.learnjava.bank.domain.Bank;
import pt.ulisboa.tecnico.learnjava.bank.domain.Client;
import pt.ulisboa.tecnico.learnjava.bank.domain.Person;
import pt.ulisboa.tecnico.learnjava.bank.exceptions.AccountException;
import pt.ulisboa.tecnico.learnjava.bank.exceptions.BankException;
import pt.ulisboa.tecnico.learnjava.bank.exceptions.ClientException;
import pt.ulisboa.tecnico.learnjava.bank.exceptions.PersonException;
import pt.ulisboa.tecnico.learnjava.bank.services.Services;
import pt.ulisboa.tecnico.learnjava.sibs.domain.Sibs;
import pt.ulisboa.tecnico.learnjava.sibs.exceptions.OperationException;
import pt.ulisboa.tecnico.learnjava.sibs.exceptions.SibsException;

public class cancelOperationMethodTest {
	
	private static final String ADDRESS = "Ave.";
	private static final String PHONE_NUMBER = "987654321";
	private static final String NIF = "123456789";
	private static final String LAST_NAME = "Silva";
	private static final String FIRST_NAME = "Ant√≥nio";

	private Sibs sibs;
	private Bank sourceBank;
	private Bank targetBank;
	private Person person;
	private Client sourceClient;
	private Client targetClient;
	private Client targetClientSameBank;
	private String sourceIban;
	private String targetIban;
	private String targetIbanSameBank;
	private Services services;
	
	@Before
	public void setUp() throws BankException, AccountException, ClientException, PersonException, SibsException, OperationException {
		this.services = new Services();
		this.sibs = new Sibs(100, services);
		this.sourceBank = new Bank("CGD");
		this.targetBank = new Bank("BPI");
		this.person = new Person( FIRST_NAME, LAST_NAME, ADDRESS, PHONE_NUMBER);
		this.sourceClient = new Client(this.sourceBank, this.person, NIF, 33);
		this.targetClient = new Client(this.targetBank, this.person, "222222222", 22);
		this.targetClientSameBank = new Client(this.sourceBank, this.person,"222222222", 22);
		this.sourceIban = this.sourceBank.createAccount(Bank.AccountType.CHECKING, this.sourceClient, 1000, 0); 
		this.targetIban = this.targetBank.createAccount(Bank.AccountType.CHECKING, this.targetClient, 1000, 0);
		this.targetIbanSameBank = this.sourceBank.createAccount(Bank.AccountType.CHECKING, this.targetClientSameBank, 1000, 0);
	}
	
	
	@After
	public void tearDown() {
		Bank.clearBanks();
	}

}
