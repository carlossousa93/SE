package State;

import pt.ulisboa.tecnico.learnjava.bank.exceptions.AccountException;
import pt.ulisboa.tecnico.learnjava.sibs.domain.TransferOperation;
import pt.ulisboa.tecnico.learnjava.sibs.exceptions.OperationException;

public class Retry implements State{
	
	private int retries = 3;
    private State previewState = null;
   
    @Override
    public void process(TransferOperation wrapper) throws AccountException, OperationException{
       
        if (!(wrapper.getState() instanceof Retry)) {
            this.previewState = wrapper.getState();
            wrapper.setState(this);
        } else {
            if (retries>0) {
            	
            	try {
            		this.previewState.process(wrapper);
				} catch (AccountException e) {
					this.retries -= 1;
				}
   
            } else {
                wrapper.setState(new Error());
            }
        }
        this.retries -= 1;
    }

	@Override
	public void cancel(TransferOperation wrapper) throws AccountException, OperationException {
		this.previewState.cancel(wrapper);
	}
}
